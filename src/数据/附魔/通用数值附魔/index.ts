// 由于这几个附魔的数值属性都是通用的，所以用同一方法封装
import { 属性类型 } from '@/@types/属性'
import { 装备部位枚举 } from '@/@types/枚举'
import { 附魔数据类型 } from '@/@types/附魔'

const 附魔数值数组 = [974, 883, 799, 491, 487]
// 按顺序位置索引
const 附魔分数索引 = [1050, 952, 783, 437, 524]

// 通用附魔包含
export const 通用数值属性枚举 = {
  无双: {
    属性: 属性类型.无双等级,
    支持部位: [装备部位枚举.护腕, 装备部位枚举.下装],
  },
  破防: {
    属性: 属性类型.全破防等级,
    支持部位: [装备部位枚举.护腕, 装备部位枚举.下装, 装备部位枚举.暗器],
  },
  会心: {
    属性: 属性类型.全会心等级,
    支持部位: [装备部位枚举.护腕, 装备部位枚举.下装],
  },
  会效: {
    属性: 属性类型.全会心效果等级,
    支持部位: [],
  },
  破招: {
    属性: 属性类型.破招值,
    支持部位: [装备部位枚举.帽子, 装备部位枚举.鞋子, 装备部位枚举.戒指],
  },
  加速: {
    属性: 属性类型.加速等级,
    支持部位: [装备部位枚举.帽子, 装备部位枚举.鞋子, 装备部位枚举.暗器],
  },
}

export const 获取通用附魔数据 = (属性 = '无双'): 附魔数据类型[] => {
  const 对应属性信息 = 通用数值属性枚举?.[属性]
  return 附魔数值数组.map((item, index) => {
    return {
      附魔名称: `${属性}+${item}`,
      附魔支持部位: 对应属性信息?.支持部位,
      增益集合: [{ 属性: 对应属性信息.属性, 值: item }],
      附魔装分: 附魔分数索引[index],
    }
  })
}
